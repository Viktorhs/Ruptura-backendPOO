generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model characterAttributes {
  id             Int        @unique @default(autoincrement())
  sheetId        Int
  strength       Int?
  dexterity      Int?
  constitution   Int?
  intellingence  Int?
  wisdom         Int?
  charisma       Int?
  ballisticSkill Int?
  meleeSkill     Int?
  userSheets     userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterDefenses {
  id            Int        @unique @default(autoincrement())
  sheetId       Int
  name          String?
  weight        String?
  CA            String?
  modifications String?
  createdAt     DateTime   @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  updatedAt     DateTime   @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  userSheets    userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterDescription {
  id          Int        @unique @default(autoincrement())
  sheetId     Int
  age         String?
  height      String?
  weight      String?
  eyes        String?
  skin        String?
  hair        String?
  appearance  String?
  languages   String?
  personality String?
  ideals      String?
  bonds       String?
  weaknesses  String?
  features    String?
  allies      String?
  story       String?
  userSheets  userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterInformations {
  id            Int        @unique @default(autoincrement())
  sheetId       Int
  characterName String?
  function      String?
  race          String?
  alignment     String?
  daysSurvived  Int?
  userSheets    userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterItems {
  id         Int        @unique @default(autoincrement())
  sheetId    Int
  money      String?
  others     String?
  userSheets userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterNotes {
  id         Int        @unique @default(autoincrement())
  sheetId    Int
  notes      String?
  userSheets userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterSkills {
  id         Int        @unique @default(autoincrement())
  sheetId    Int
  skills     String?
  talents    String?
  userSheets userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterStatus {
  id              Int        @unique @default(autoincrement())
  sheetId         Int
  CA              Int?
  speed           String?
  totalLife       Int?
  actualLife      String?
  totalSanity     Int?
  actualSanity    String?
  deathSuccesses  Int        @default(0)
  deathFailure    Int        @default(0)
  sanitySuccesses Int        @default(0)
  sanityFailure   Int        @default(0)
  userSheets      userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characterWeapons {
  id             Int        @unique @default(autoincrement())
  sheetId        Int
  name           String?
  weight         String?
  attack         String?
  type           String?
  damage         String?
  property       String?
  range          String?
  maxMunition    String?
  actualMunition String?
  createdAt      DateTime   @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  updatedAt      DateTime   @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  userSheets     userSheets @relation(fields: [sheetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sessions {
  id        Int      @unique @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  updatedAt DateTime @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  users     users    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model userSheets {
  id                    Int                     @unique @default(autoincrement())
  userId                Int
  createdAt             DateTime                @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  updatedAt             DateTime                @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  users                 users                   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  characterAttributes   characterAttributes[]
  characterDefenses     characterDefenses[]
  characterDescription  characterDescription[]
  characterInformations characterInformations[]
  characterItems        characterItems[]
  characterNotes        characterNotes[]
  characterSkills       characterSkills[]
  characterStatus       characterStatus[]
  characterWeapons      characterWeapons[]
}

model users {
  id         Int          @unique @default(autoincrement())
  nickname   String       @unique
  email      String       @unique @db.VarChar(500)
  password   String       @db.VarChar(200)
  createdAt  DateTime     @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  updatedAt  DateTime     @default(dbgenerated("'2023-03-11 09:49:06.266979'::timestamp without time zone")) @db.Timestamp(6)
  sessions   sessions[]
  userSheets userSheets[]
}
